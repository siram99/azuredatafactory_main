{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceDynamic",
						"type": "DatasetReference"
					},
					"name": "employee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Sinkemployee",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as integer,",
				"          firstname as string,",
				"          lastname as string,",
				"          age as integer,",
				"          salary as integer,",
				"          gender as string,",
				"          deptno as integer,",
				"          state as string,",
				"          mobilenumber as string,",
				"          mail as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employee",
				"employee select(mapColumn(",
				"          empid,",
				"          firstname,",
				"          age,",
				"          salary,",
				"          gender,",
				"          deptno",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"derivedColumn1 filter(age < 25) ~> filter1",
				"select1 derive(bonus_salary = salary+5000) ~> derivedColumn1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['employee_filter.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}